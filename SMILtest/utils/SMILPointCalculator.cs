using SMILtest.elements;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SMILtest.utils
{
    class SMILPointCalculator : PointsCalculator
    {
        private static readonly Dictionary<string, int[]> rawAnswersScales = new Dictionary<string, int[]>
        {
            {"L_no" , new int[]{ 15, 30, 45, 75, 105, 135, 195, 225, 255, 285, 60, 90, 120, 150, 165 } },
            {"F_yes", new int[]{ 14, 23, 27, 31, 33, 34, 35, 40, 42, 48, 49, 50, 53, 56, 66, 85, 121, 123, 139,
                                            146, 151, 156, 168, 184, 197, 200, 202, 205, 206, 209, 210, 211, 215, 218, 227,
                                            245, 246, 247, 252, 256, 269, 275, 286, 291, 293 } },
            {"F_no", new int[]{ 17, 20, 54, 65, 75, 83, 112, 113, 115, 164, 169, 177, 185,
                                            196, 199, 220, 257, 258, 272, 276 } },
            {"K_yes", new int[] { 96 } },
            {"K_no", new int[] { 30, 39, 71, 89, 124, 129, 134, 138, 142, 148, 160, 170, 171, 180, 183, 217, 234,
                                            267, 272, 296, 316, 322, 374, 383, 397, 398, 406, 461, 502 } },
            {"Hs_yes", new int[] { 23, 29, 43, 62, 72, 108, 114, 125, 161, 189, 273 } },
            {"Hs_no", new int[] { 2, 3, 7, 9, 18, 51, 55, 63, 68, 103, 140, 153, 155, 163, 175, 188, 190, 192, 230, 243, 274, 281 } },
            {"D_yes", new int[] { 5, 13, 23, 32, 41, 43, 52, 67, 86, 104, 130, 138, 142, 158, 159, 182, 189, 193, 236, 259 } },
            {"D_no", new int[] { 2, 8, 9, 18, 30, 36, 39, 46, 51, 57, 58, 64, 80, 88, 89, 95, 98, 107, 122, 131, 145,
                                            152, 153, 154, 155, 160, 178, 191, 207, 208, 238, 241242, 248, 263, 270, 271, 272, 285, 296 } },
            {"Hy_yes", new int[] { 10, 23, 32, 43, 44, 47, 76, 114, 179, 186, 189, 238 } },
            {"Hy_no", new int[] { 2, 3, 6, 7, 8, 9, 12, 26, 30, 51, 55, 71, 89, 93, 103, 107, 109, 124, 128, 129, 136, 137,
                                            141, 147, 153, 160, 162, 163, 170, 172, 174, 175, 180, 188, 190, 192, 201, 213, 230, 234,
                                            243, 265, 267, 274, 279, 289, 292 } },
            {"Pd_yes", new int[] { 16, 21, 24, 32, 33, 35, 36, 42, 61, 67, 84, 94, 102, 106, 110, 118, 127, 215, 216,
                                            224, 239, 244, 245, 284 } },
            {"Pd_no", new int[] { 8, 20, 37, 82, 91, 96, 107, 134, 137, 141, 155, 170, 171, 173, 180, 183, 201, 231, 235,
                                            237, 248, 267, 287, 289, 294, 296 } },
            {"Mf-f_yes", new int[] { 4, 25, 70, 74, 77, 78, 87, 92, 126, 132, 133, 134, 140, 149, 187, 203, 204, 217, 226, 239,
                                            261, 278, 282, 295, 299 } },
            {"Mf-f_no", new int[] { 1, 19, 26, 69, 79, 80, 81, 89, 99, 112, 115, 116, 117, 120, 144, 176, 179, 198, 213, 219,
                                            221, 223, 229, 231, 249, 254, 260, 262, 264, 280, 283, 297, 300 } },
            {"Mf-m_yes", new int[] { 4, 25, 69, 70, 74, 77, 78, 87, 92, 126, 132, 134, 140, 149, 179, 187, 203, 204, 217, 226,
                                            231, 239, 261, 278, 282, 295, 297, 299 } },
            {"Mf-m_no", new int[]  { 1, 19, 26, 28, 79, 80, 81, 89, 99, 112, 115, 116, 117, 120, 133, 144, 176, 198, 213, 214,
                                            219, 221, 223, 229, 249, 254, 260, 262, 264, 280, 283, 300 } },
            {"Pa_yes", new int[]{ 15, 16, 22, 24, 27, 35, 110, 121, 123, 127, 151, 157, 158, 202, 275, 284, 291, 293, 299, 305,
                                            317, 338, 341, 364, 365 } },
            {"Pa_no", new int[] { 93, 107, 109, 111, 117, 124, 268, 281, 294, 313, 316, 319, 327, 347, 348 } },
            {"Pt_yes", new int[]  { 10, 15, 22, 32, 41, 67, 76, 86, 94, 102, 106, 142, 159, 182, 189, 217, 238, 266, 301, 304, 305,
                                            317, 321, 336, 337, 340, 342, 343, 344, 346, 349, 351, 352, 356, 357, 359, 360, 361 } },
            {"Pt_no", new int[] { 3, 8, 36, 122, 152, 164, 178, 329, 353 } },
            {"Sc_yes", new int[] { 15, 16, 21, 22, 24, 32, 33, 35, 38, 40, 41, 47, 52, 76, 97, 104, 121, 156, 157, 159, 168, 179, 182,
                                            194, 202, 210, 212, 238, 241, 251, 259, 266, 273, 282, 291, 297, 301, 303, 305, 307, 312, 320, 324,
                                            325, 332, 334, 335, 339, 341, 345, 349, 350, 352, 354, 355, 356, 360, 363, 364 } },
            {"Sc_no", new int[] { 8, 17, 20, 37, 65, 103, 119, 177, 178, 187, 192, 196, 220, 276, 281, 306, 309, 322, 330 } },
            {"Ma_yes", new int[] { 11, 13, 21, 22, 59, 64, 73, 97, 100, 109, 127, 134, 145, 156, 157, 167, 181, 194, 212, 222,
                                            226, 228, 232, 233, 238, 240, 250, 251, 263, 266, 268, 271, 277, 279, 298 } },
            {"Ma_no", new int[] { 101, 105, 111, 119, 130, 148, 166, 171, 180, 267, 289 } },
            {"Si_yes", new int[] { 32, 67, 82, 111, 117, 124, 138, 147, 171, 172, 180, 201, 236, 267, 278, 292, 304, 316, 321, 332,
                                            336, 342, 357, 377, 383, 398, 401, 427, 436, 455, 473, 467, 549, 564 } },
            {"Si_no", new int[] { 25, 33, 57, 91, 99, 119, 126, 143, 193, 208, 229, 231, 254, 262, 281, 296, 309, 353, 359, 371, 391,
                                            400, 415, 440, 446, 449, 450, 451, 462, 469, 479, 481, 482, 501, 521, 547 } }
        };
        private static readonly string[] scaleTypesSMIL = new string[] { "L", "F", "K", "Hs", "D", "Hy", "Pd", "Mf", "Pa", "Pt", "Sc", "Ma", "Si" };

        private static readonly Dictionary<string, int[]> TPointsMale = new Dictionary<string, int[]>
        {
            { "L",  new int[] { 32, 37, 41, 46, 50, 55, 59, 64, 68, 73, 77, 82, 86, 91 } },
            { "F",  new int[]{ 30, 34, 37, 40, 44, 47, 51, 54, 58, 61, 64, 68, 71, 74, 78, 81, 85 } },
            { "K",  new int[]{ 9, 12, 14, 17, 19, 22, 24, 27, 30, 32, 35, 38, 40, 43, 45, 47, 50, 53, 56, 58, 61, 64, 66, 69, 71, 74, 76, 79, 82, 84, 87 } },
            { "Hs", new int[]{ 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 42, 44, 50, 53, 56, 56, 62, 65, 68, 71, 74, 77, 80, 83, 86, 89, 92, 95, 98, 101, 104, 107, 110, 113, 116, 119, 122, 0,0,0,0,0,0,0,0,0,0,0 } },
            { "D",  new int[]{ 21, 24, 26, 28, 31, 33, 36, 38, 40, 43, 45, 48, 50, 52, 55, 57, 60, 62, 64, 67, 69, 72, 74, 76, 79, 81, 84, 86, 88, 91, 93, 96, 98, 100, 103, 105, 108, 110, 0,0,0,0,0,0,0,0,0,0 } },
            { "Hy", new int[]{ 0, 0, 0, 0, 0, 31, 34, 36, 38, 41, 43, 45, 48, 50, 52, 54, 57, 59, 61, 64, 66, 68, 70, 75, 76, 80, 82, 84, 87, 89, 91, 93, 96, 98, 100, 103, 105, 107, 110, 112, 114, 116, 119, 121, 0,0,0,0,0,0,0 } },
            { "Pd", new int[]{ 21, 23, 26, 28, 30, 33, 35, 38, 40, 42, 45, 47, 49, 52, 54, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 86, 88, 90, 93, 95, 98, 100, 102, 105, 107, 110, 112, 114, 117, 119, 122 } },
            { "Mf", new int[]{ 22, 25, 28, 31, 34, 38, 41, 44, 47, 50, 53, 56, 59, 62, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 98, 100, 103, 106, 109, 112, 115, 118, 121 } },
            { "Pa", new int[]{ 17, 20, 24, 28, 31, 35, 38, 42, 46, 49, 53, 56, 60, 34, 37, 71, 76, 78, 82, 85, 89, 92, 96, 100, 103, 107, 110, 114, 118, 121,0,0,0,0,0 } },
            { "Pt", new int[]{ 20, 22, 24, 26, 28, 30, 32, 34, 37, 39, 41, 43, 45, 47, 49, 51, 53, 56, 58, 60, 32, 64, 66, 68, 70, 72, 74, 76, 79, 81, 83, 85, 87, 89, 91, 93, 95, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 121,0,0,0,0 } },
            { "Sc", new int[]{ 20, 22, 24, 26, 29, 31, 33, 35, 38, 40, 42, 44, 46, 48, 51, 53, 55, 57, 60, 62, 64, 66, 68, 70, 73, 75, 77, 79, 82, 84, 86, 88, 90, 92, 95, 97, 99, 101, 104, 106, 108, 110, 112, 114, 117, 119, 121,0,0,0,0,0 } },
            { "Ma", new int[]{ 21,24,26,28,31,34,36,38,41,44,46,48,51,54,56,58,61,64,66,68,71,74,76,78,81,84,86,88,91,94,96,98,101,104,106,108,111,114,116,118,121 } },
            { "Si", new int[]{ 20, 21, 23, 24, 25, 28, 29, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 101, 102, 104, 0,0,0,0,0,0 } }
        };

        private static readonly Dictionary<string, int[]> TPointsFemale = new Dictionary<string, int[]>
        {
            { "L",  new int[] { 31, 35, 39, 43, 48, 52, 57, 61, 65, 69, 74, 78, 82, 86 } },
            { "F",  new int[]{ 29, 32, 35, 38, 41, 44, 48, 51, 54, 57, 60, 63, 66, 66, 72, 75, 79 } },
            { "K",  new int[]{ 0,0,20, 22, 26, 27, 29, 32, 34, 37, 39, 41, 44, 46, 49, 51, 53, 56, 58, 61, 63, 65, 68, 70, 73, 75, 77, 80, 82, 85, 87 } },
            { "Hs", new int[]{ 0, 20, 22, 25, 27, 29, 31, 34, 36, 38, 40, 42, 44, 47, 49, 51, 53, 56, 58, 60, 62, 64, 66, 69, 71, 73, 75, 78, 80,83,84,86,88,90,93,95,97,100,102,104,106,108,110,113,115,117,119,122 } },
            { "D",  new int[]{ 0, 0, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 51, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111 } },
            { "Hy", new int[]{ 20, 23, 25, 27, 29, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 68, 70, 72, 74, 76, 78, 80, 82, 83, 86, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 106, 103, 110, 112, 114, 115 } },
            { "Pd", new int[]{ 0, 22, 24, 26, 28, 31, 33, 36, 38, 40, 43, 45, 48, 50, 52, 55, 57, 60, 62, 64, 67, 69, 72, 74, 76, 79, 81, 84, 86, 88, 91, 93, 96, 98, 100, 103, 105, 108, 110, 112, 115, 117, 120 } },
            { "Mf", new int[]{ 0, 0, 95, 92, 89, 86, 84, 81, 79, 76, 73, 71, 68, 66, 63, 60, 58, 55, 53, 50, 47, 45, 42, 40, 0, 34, 32, 29, 27, 24, 20, 0, 0 } },
            { "Pa", new int[]{ 0, 22, 24, 26, 30, 0, 0, 40, 42, 46, 48, 52, 54, 58, 0, 64, 66, 70, 72, 76, 78, 82, 84, 88, 90, 94, 96, 100, 102, 106, 106, 112, 114, 118, 120 } },
            { "Pt", new int[]{ 0, 0, 0, 0, 0, 21, 23, 25, 27, 29, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 53, 55, 58, 59, 61, 63, 65, 67, 69, 71, 74, 76, 78, 80, 82, 84, 86, 88, 92, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 116, 118, 120 } },
            { "Sc", new int[]{ 20, 21, 23, 25, 27, 29, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 77, 79, 81, 83, 85, 87, 89, 93, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 116 } },
            { "Ma", new int[]{ 0, 21, 24, 27, 29, 32, 34, 37, 40, 42, 45, 47, 50, 53, 55, 58, 60, 63, 66, 68, 71, 73, 76, 79, 81, 84, 86, 89, 92, 94, 97, 99, 102, 105, 107, 110, 112, 115, 118, 120, 0 } },
            { "Si", new int[]{ 0, 0, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102 } }
        };

        public static Dictionary<string, int> GetSMILResult(List<QuestionElement> questionElements, string gender)
        {
            var rawPoints = GetRawPointsSMIL(questionElements, gender);
            return GetTPointSmil(rawPoints, gender);
        }

        public static Dictionary<string, int> GetTPointSmil(Dictionary<string, int> scales, string gender)
        {
            Dictionary<string, int> scalesTPoints = new Dictionary<string, int>
            {
                { "L", 0 },
                { "F", 0 },
                { "K", 0 },
                { "Hs", 0 },
                { "D", 0 },
                { "Hy", 0 },
                { "Pd", 0 },
                { "Mf", 0 },
                { "Pa", 0 },
                { "Pt", 0 },
                { "Sc", 0 },
                { "Ma", 0 },
                { "Si", 0 }
            };

            Dictionary<string, int[]> scalesTPointsEdges = new Dictionary<string, int[]>
            {
                { "L", new int[]{ 0, 13 } },
                { "F",  new int[]{ 0, 16 } },
                { "K",  new int[]{ 0, 30 } },
                { "Hs",  new int[]{ 0, 47 } },
                { "D", new int[]{ 8, 55 } },
                { "Hy",  new int[]{ 5, 55 } },
                { "Pd",  new int[]{ 9, 51 } },
                { "Mf",  new int[]{ 13, 45 } },
                { "Pa",  new int[]{ 0, 34 } },
                { "Pt",  new int[]{ 13, 65 } },
                { "Sc",  new int[]{ 13, 64 } },
                { "Ma",  new int[]{ 7, 47 } },
                { "Si",  new int[]{ 5, 70 } }
            };


            scales["Hs"] += (int)(scales["K"] * 0.5);
            scales["Pd"] += (int)(scales["K"] * 0.4);
            scales["Pt"] += scales["K"] * 1;
            scales["Sc"] += scales["K"] * 1;
            scales["Ma"] += (int)(scales["K"] * 0.2);

            foreach (string type in scaleTypesSMIL)
            {
                if (scales[type] >= scalesTPointsEdges[type][0] && scales[type] <= scalesTPointsEdges[type][1])
                {
                    if (gender.Equals("М"))
                    {
                        scalesTPoints[type] = TPointsMale[type][scales[type] - scalesTPointsEdges[type][0]];
                    }
                    else
                    {
                        scalesTPoints[type] = TPointsFemale[type][scales[type] - scalesTPointsEdges[type][0]];
                    }
                }
            }

            return scalesTPoints;
        }

        public static Dictionary<string, int> GetRawPointsSMIL(List<QuestionElement> questionElements, string gender)
        {

            Dictionary<string, int> scales = new Dictionary<string, int>
            {
                { "L", 0 },
                { "F", 0 },
                { "K", 0 },
                { "Hs", 0 },
                { "D", 0 },
                { "Hy", 0 },
                { "Pd", 0 },
                { "Mf", 0 },
                { "Pa", 0 },
                { "Pt", 0 },
                { "Sc", 0 },
                { "Ma", 0 },
                { "Si", 0 }
            };

            foreach (QuestionElement questionElement in questionElements)
            {
                foreach (string type in scaleTypesSMIL)
                {
                    if (questionElement.Cb1.Checked) //выбрано да
                    {
                        if (type.Equals("Mf"))
                        {
                            if (gender.Equals("М"))
                            {
                                if (rawAnswersScales[type + "-m_yes"].Contains(questionElement.Ind))
                                {
                                    scales[type]++;
                                }
                            }
                            else
                            {
                                if (rawAnswersScales[type + "-f_yes"].Contains(questionElement.Ind))
                                {
                                    scales[type]++;
                                }
                            }
                        }
                        else
                        {
                            if (rawAnswersScales.ContainsKey(type + "_yes"))
                            {
                                if (rawAnswersScales[type + "_yes"].Contains(questionElement.Ind))
                                {
                                    scales[type]++;
                                }
                            }
                        }
                    }
                    else // выбрано нет
                    {
                        if (type.Equals("Mf"))
                        {
                            if (gender.Equals("М"))
                            {
                                if (rawAnswersScales[type + "-m_no"].Contains(questionElement.Ind))
                                {
                                    scales[type]++;
                                }
                            }
                            else
                            {
                                if (rawAnswersScales[type + "-f_no"].Contains(questionElement.Ind))
                                {
                                    scales[type]++;
                                }
                            }
                        }
                        else
                        {
                            if (rawAnswersScales.ContainsKey(type + "_no"))
                            {
                                if (rawAnswersScales[type + "_no"].Contains(questionElement.Ind))
                                {
                                    scales[type]++;
                                }
                            }
                        }
                    }
                }
            }

            return scales;

        }
    }
}
